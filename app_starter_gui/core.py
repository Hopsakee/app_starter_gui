"""Core functionality for button management"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['Button', 'save_buttons', 'load_buttons', 'test_save_load']

# %% ../nbs/00_core.ipynb 2
from dataclasses import dataclass
import yaml
from pathlib import Path

# %% ../nbs/00_core.ipynb 4
@dataclass
class Button:
    """A button with label, image, link, and type"""
    label: str
    image_url: str
    link_url: str
    app_type: str

# %% ../nbs/00_core.ipynb 5
def save_buttons(buttons, file='buttons.yaml'):
    """Save buttons to YAML file
    
    Args:
        buttons: List of Button objects
        file: Path to YAML file (default: 'buttons.yaml')
    """
    button_data = [vars(b) for b in buttons]
    with open(file, 'w') as f:
        yaml.safe_dump(button_data, f)

# %% ../nbs/00_core.ipynb 6
def load_buttons(file='buttons.yaml'):
    """Load buttons from YAML file
    
    Args:
        file: Path to YAML file (default: 'buttons.yaml')
    Returns:
        List of Button objects
    """
    if not Path(file).exists():
        return []
    with open(file) as f:
        button_data = yaml.safe_load(f)
    return [Button(**data) for data in button_data]

# %% ../nbs/00_core.ipynb 8
from fastcore.test import *

def test_save_load():
    "Test that buttons save and load correctly"
    test_buttons = [
        Button("Test1", "img1.jpg", "http://test1.com", "Type1"),
        Button("Test2", "img2.jpg", "http://test2.com", "Type2")
    ]
    save_buttons(test_buttons, "test_buttons.yaml")
    loaded_buttons = load_buttons("test_buttons.yaml")
    test_eq(len(loaded_buttons), len(test_buttons))
    test_eq(loaded_buttons[0].label, "Test1")
    test_eq(loaded_buttons[0].app_type, "Type1")
    test_eq(loaded_buttons[1].label, "Test2")
    test_eq(loaded_buttons[1].app_type, "Type2")

test_save_load()
